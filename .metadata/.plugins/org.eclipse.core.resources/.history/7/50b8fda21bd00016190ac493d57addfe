package adatastructures.set;

import java.util.AbstractSet;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class HashSet {

	private Node[] buckets;
	
	private int size;
	
	public HashSet(int bucketslength){
		buckets = new Node[bucketslength];
		size=0;
	}
	
	public boolean contains(Object x){
		int h = x.hashCode();
		if (h<0) h=-h;
		h = h % buckets.length;
		
		Node current = buckets[h];
		while (current!=null){
			if(current.data.equals(x)){
				return true;
			}
			current=current.next;
		}
		return false;
	}
	
	public boolean add(Object x){
		int h = x.hashCode();
		if (h<0) h=-h;
		h = h % buckets.length;
		
		Node current = buckets[h];
		while(!current==null){
			if (current.data.equals(x)){
				return false;
			}
			
			
		}
		
		
		
	}
	
	
	
	class Node{
		
		private Object data;
		
		private Node next;
		
	}
	
	class HashIterator implements Iterator {

		@Override
		public boolean hasNext() {
			// TODO Auto-generated method stub
			return false;
		}

		@Override
		public Object next() {
			// TODO Auto-generated method stub
			return null;
		}
		
	}
	
}
