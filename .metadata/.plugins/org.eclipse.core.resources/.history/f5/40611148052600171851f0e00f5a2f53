package com.plantplaces.service;

import java.util.List;
import java.io.InputStream;
import java.util.ArrayList;

import javax.inject.Inject;
import javax.inject.Named;

import com.plantplaces.dao.IPlantDAO;
import com.plantplaces.dto.Photo;
import com.plantplaces.dto.Plant;
import com.plantplaces.dto.Specimen;
import com.plantplaces.dao.ISpecimenDAO;


@Named
public class PlantService implements IPlantService {

	@Inject
	IPlantDAO plantDAO;
	
	@Inject
	ISpecimenDAO specimenDAO;
	
	private List<Plant> allPlants;
	
	@Override
	public List<Plant> filterPlants(String filter) {
		if (allPlants==null){
			allPlants = plantDAO.fetchPlants();
		}
		List<Plant> returnPlants = new ArrayList();
		for (Plant plant: allPlants){
			if(plant.toString().contains(filter)){
				returnPlants.add(plant);
			}
		}
		return returnPlants;
	}
	
	
	public void save(Plant plant) throws Exception{
		if(plant.getGenus() == null || plant.getGenus().isEmpty() ){
			throw new Exception("Genus required");
		}
		plantDAO.insert(plant);	
	}
	
	@Override
	public void save(Specimen specimen) throws Exception {
		specimenDAO.insert(specimen);
	}
	
	
	@Override
	public void loadSpecimens(Plant plant) {
		List<Specimen> specimens = specimenDAO.fetchByPlantId(plant.getPLANT_ID());
		plant.setSpecimens(specimens);
	}
	
	
	
	/**
	 * Return a list of plants that match the given search criteria
	 * @param plant a parameter that contains the search criteria
	 * @return a list of matching plants
	 */
	@Override
	public List<Plant> fetchPlants(Plant plant){
		List<Plant> plants = plantDAO.fetchPlants(plant);
		return plants;
	}

	public IPlantDAO getPlantDAO() {
		return plantDAO;
	}

	public void setPlantDAO(IPlantDAO plantDAO) {
		this.plantDAO = plantDAO;
	}

	public List<Plant> getAllPlants() {
		return allPlants;
	}

	public void setAllPlants(List<Plant> allPlants) {
		this.allPlants = allPlants;
	}


	@Override
	public void savePhoto(Photo photo, InputStream inputStream) {
		// TODO Auto-generated method stub
		
	}


	
	
	

}
