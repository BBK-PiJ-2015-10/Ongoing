package multithreading

import java.util.concurrent.Executors;
import java.util.concurrent.Callable;

object MultiExecutors {
  
  def main(args: Array[String]): Unit = {
    calcFibWithExecutor
  }
  
  def fib(n: Int): Int = {
    if (n<2) 1
    else fib(n-1)+fib(n-2)
  }
  
  def calcFibWithExecutor {
    val es = Executors.newFixedThreadPool(4)
    val futures = for (i <- 30 to 15 by -1) yield {
      es.submit(new Callable[Int] {
        def call: Int = fib(i)
      })
    }
    futures.foreach(f=> println(f.get()))
    println("Am I done")
    //es.shutdown()
  }
  
}