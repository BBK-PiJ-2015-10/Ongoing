package pairone;

import org.apache.hadoop.mapreduce.Reducer;

import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.IntWritable;

import java.io.IOException;
import java.lang.InterruptedException;

public class ReducerPair extends Reducer<Pair,IntWritable,Text,IntWritable> {

	private IntWritable result = new IntWritable();
	
	private Text fpair = new Text();
	
	public void reduce(Pair key,Iterable<IntWritable> values,Context context)
		throws IOException, InterruptedException {
		
		String testWord = context.getConfiguration().get("target1");
		
		int sum=0;
		
		for (IntWritable value: values){
			sum++;
		}
		
		if ((key.getFirstWord().toString().equals(testWord)) ||
		    (key.getSecondWord().toString().equals(testWord))) {
			
			fpair.set((key.getFirstWord().toString()+key.getSecondWord().toString()));
			
		}
		
	

		
		/*
		int sum=0;
		
		fpair.set((key.getFirstWord().toString()+key.getSecondWord().toString()));
		
		for (IntWritable value: values){
			sum++;
		}
		result.set(sum);
		context.write(fpair,result);
		*/
		
	}
	
}
