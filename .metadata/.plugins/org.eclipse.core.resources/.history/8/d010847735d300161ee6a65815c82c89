package sorting;

public class MergeSortPrac {
	
	private int[] values;
	
	private int[] helper;
	
	public void sort (int [] input){
		if (input.length<2){
			return;
		}
		values=input;
		helper = new int[input.length];
		mergeSort(0,values.length-1);
		
	}
	
	public void mergeSort(int low,int high){
		if (low<high){
			int mid=(low+high)/2;
			mergeSort(low,mid);
			mergeSort(mid+1,high);
			merge(low,mid,high);
		}
	}
	
	public void merge(int low,int mid, int high){
		for (int count=low;count<=high;count++){
			helper[count]=values[count];
		}
		int i=low;
		int j=mid+1;
		int k=low;
		while (i<=mid && j<=high){
			if (helper[i]<helper[j]){
				values[k]=helper[i];
				i++;
			}
			else {
				values[k]=helper[j];
				j++;
			}
			k++;
		}
		while (i<=mid){
			values[k]=helper[i];
		}		
	}
	

}
