package theappbusiness;

import java.util.Stack;
import java.util.Set;
import java.util.HashSet;

public class Java1DArray {

	public static void main(String[] args) {
		
		int[] test1 = {0,0,0,0,0};
		
		Java1DArray ja = new Java1DArray();
		ja.runTest(true,test1,test1.length,3,1);

	}
	
	
	public boolean evalArray(int[] values,int size,int fast){
		int initialNode=0;
		int limit=size-1;
		int forward=1;
		int backward=-1;
		int jump=fast;
		
		Stack<Integer> path = new Stack();
		
		Set<Integer> closedNodes = new HashSet();
		
		path.push(initialNode);
		
		while (!path.isEmpty()){
			int currentNode=path.peek();
			if (currentNode>limit){
				return true;
			}
			if ((currentNode+jump)>limit){
				return true;
			}
			else {
				if (values[currentNode+jump]==0){
					path.push(currentNode+jump);
				}
				else {
					if ((currentNode+forward)>limit){
						return true;
					}
					else {
						if (values[currentNode+forward]==0){
							path.push(currentNode+forward);
						}
						else {
							if (values[currentNode+backward]==0){
								path.push(currentNode+forward);
							}
							else {
								path.pop();
							}
						}
					}
				}	
			}	
		}
		return false;
	}
	
	public void runTest(boolean expected,int[] values, int target, int fast,int testRef){
		String result;
		if (expected==evalArray(values,target,fast)){
			result="passed";
		}
		else {
			result="failed";
		}
		System.out.println("Test # "+testRef +" " +result);
	}

}
