package theappbusiness;

import java.util.Stack;
import java.util.Map;
import java.util.HashMap;

public class JavaStack {

	public static void main(String[] args) {
		
	
		JavaStack js = new JavaStack();
		
		
		js.runTest("{}",true,1);
		js.runTest("[]",true,2);
		js.runTest("[]{",false,3);
		js.runTest("(){}",true,4);
		js.runTest("({})",true,5);
		js.runTest("({)}",false,6);
		js.runTest("}{",false,7);
		js.runTest("[[",false,8);
		js.runTest("[]{[]",false,9);
		js.runTest("{}(",false,10);
		js.runTest("({[]})",true,11);
		js.runTest("([])",true,12);
		//js.runEval("{}(");
	}
	

	private Map<Character,Character> map = new HashMap();
	
	private void loadMap(){
		map.put('{','}');
		map.put('(',')');
		map.put('[',']');
	}
	
	private boolean isBalanced(String input){
		if ((input.length() % 2)!=0){
			return false;
		}
		loadMap();
		Stack<Character> stack = new Stack();
		if (input.length()>0){
			evalWord(input,stack);
			if (stack.isEmpty()){
				return true;
			}
		}
		return false;
	}
	

	private Stack<Character> evalWord(String input,Stack<Character> stack){
		char val = input.charAt(0);
		if (!stack.isEmpty()){
			char peek = stack.peek();
			if (val==peek){
				stack.pop();
			}
		}
		else {
			if(map.get(val)!=null){
				stack.push(map.get(val));
			}
			else {
				stack.push(' ');
			}
		}
		if (input.length()>1){
			return evalWord(input.substring(1),stack);
		} else {
			return stack;
		}
	}
	
	public void runEval(String input){
		System.out.println(isBalanced(input));
	}
	
	
	public void runTest(String input,Boolean result,int testref){
		if (isBalanced(input)==result){
			System.out.println("Passed test " +testref);
		}
		else {
			System.out.println("Failed test " +testref);
		}
	}
	


}
